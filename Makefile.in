# ./Makefile.in			-*- Makefile -*-
# $Id$
@MCOMMON@

srcdir =	@srcdir@
VPATH =		@srcdir@
.PATH:		@srcdir@

first_rule: all
dummy:

subdirs = src doc src/graphics src/test
allsubdirs = W11 $(subdirs)

DIST =	INSTALL README.configure configure Makefile Makefile.in ChangeLog

DIST_CFG = autoconf/aclocal.m4 autoconf/xpm.m4 autoconf/libtool.m4 \
	autoconf/configure.in  autoconf/config.h.in \
	autoconf/Make.common.in autoconf/install-sh autoconf/mkinstalldirs \
	autoconf/config.guess autoconf/config.sub \
	autoconf/ltmain.sh \

MKDIR = $(srcdir)/autoconf/mkinstalldirs

#-------------------------------------------------------------------------

all allbin alldoc tags:
	@if test x@host_os@ = xcygwin; then (cd W11; ${MAKE} $@) || exit 1; fi
	@for I in ${subdirs}; do (cd $$I; ${MAKE} $@) || exit 1; done

realclean: clean
	$(RMF) config.h config.status config.log libtool

clean:
	$(RMF) *~ config.cache
	$(RMF) -r autom4te.cache
	@if test x@host_os@ = xcygwin; then (cd W11; ${MAKE} $@) || exit 1; fi
	@for I in ${subdirs}; do (cd $$I; ${MAKE} $@) || exit 1; done

#
# entry points for other programs
#
rxvt:
	(cd src; ${MAKE})

clock:
	(cd rclock; ${MAKE})

graphics qplot:
	(cd src/graphics; ${MAKE} qplot)

tests:
	(cd src/test; ${MAKE} tests)

#-------------------------------------------------------------------------
configure: autoconf/configure.in autoconf/aclocal.m4 autoconf/config.h.in
	cd $(srcdir);
	./.prebuild

config.status:
	if test -x config.status; then config.status --recheck; \
	else $(SHELL) configure; fi

autoconf/config.h.in: autoconf/configure.in
	cd $(srcdir);
	./.prebuild

installdirs:
	$(MKDIR) $(DESTDIR)$(bindir)
	$(MKDIR) $(DESTDIR)$(mandir)

install: installdirs
	@if test x@host_os@ = xcygwin; then (cd W11; ${MAKE} $@) || exit 1; fi
	@for I in $(subdirs); do (cd $$I; $(MAKE) DESTDIR=$(DESTDIR) $@) || exit 1; done

Makefiles:
	$(SHELL) config.status

cleandir: realclean

# distclean goal is for making a clean source tree, but if you have run
# configure from a different directory, then doesn't destroy all your
# hardly compiled and linked stuff. That's why there is always $(srcdir)/
# In that case most of those commands do nothing, except cleaning *~
# and cleaning source links.
distclean:
	(cd $(srcdir); $(RMF) *~ config.cache config.h config.log config.status libtool)
	@for I in $(allsubdirs); do (cd $$I; $(MAKE) $@) || exit 1; done
	(cd $(srcdir); $(RMF) Makefile autoconf/Make.common)

distdirs:
	mkdir ../$(VERNAME);
	mkdir ../$(VERNAME)/autoconf;
	@for I in $(allsubdirs); do (cd $$I; $(MAKE) $@ || (echo "Failed to make distclean in $$I"; exit 0) ); done

distcopy:
	$(CP) -p $(DIST) ../$(VERNAME);
	$(CP) -p $(DIST_CFG) ../$(VERNAME)/autoconf;
	@for I in $(allsubdirs); do (cd $$I; $(MAKE) $@) || exit 1; done

distrib: configure autoconf/config.h.in distdirs distcopy

tar.gz:  ../$(VERNAME).tar.gz
../$(VERNAME).tar.gz:
	(cd ..; tar cvf - $(VERNAME) | gzip -f9 > $(VERNAME).tar.gz)

tar.Z: ../$(VERNAME).tar.Z
../$(VERNAME).tar.Z:
	(cd ..; tar cvf - $(VERNAME) | compress > $(VERNAME).tar.Z)

tar.bz2: ../$(VERNAME).tar.bz2
../$(VERNAME).tar.bz2:
	(cd ..; tar cvf - $(VERNAME) | bzip2 -f9 > $(VERNAME).tar.bz2)

uuencode: tar.gz
	uuencode ../$(VERNAME).tar.gz $(VERNAME).tar.gz > ../$(VERNAME).tgz.uu

# ------------------------------------------------------------------------
